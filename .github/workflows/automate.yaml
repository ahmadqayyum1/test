name: Purge Old Container Images from ACR

on:
  push:
    branches:
      - main  
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: read
  id-token: write
  pull-requests: write

jobs:
  purge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Login to Azure (Service Principal)
        run: |
          az login --service-principal -u ${{ secrets.AZURE_APP_ID }} -p ${{ secrets.AZURE_PASSWORD }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Get ACR Name
        id: get_acr_name
        run: |
          # Retrieve the ACR name automatically (you can fetch it from your subscription if needed)
          ACR_NAME=$(az acr list --query "[0].name" -o tsv)
          echo "ACR_NAME=$ACR_NAME" >> $GITHUB_ENV

      - name: List repositories in ACR
        id: list_repos
        run: |
          # List all repositories in the automatically detected ACR
          az acr repository list --name ${{ env.ACR_NAME }} --output tsv > repositories.txt

      - name: Clean up repositories
        run: |
          # Loop through each repository in the ACR
          while read repo; do
            echo "Processing repository: $repo"
            
            # Get all images in the repo, sorted by creation time (or tag)
            images=$(az acr repository show-tags --name ${{ env.ACR_NAME }} --repository $repo --output tsv --orderby time_desc)
            
            # Get the total number of images
            image_count=$(echo "$images" | wc -l)
            
            if [ $image_count -gt 3 ]; then
              # If more than 3 images, delete the excess ones (skip first 3)
              excess_images=$(echo "$images" | tail -n +4)
              
              for image in $excess_images; do
                echo "Deleting image: $image from repo: $repo"
                az acr repository delete --name ${{ env.ACR_NAME }} --repository $repo --tag $image --yes
              done
            else
              echo "Skipping repository $repo as it has 3 or fewer images."
            fi
          done < repositories.txt
