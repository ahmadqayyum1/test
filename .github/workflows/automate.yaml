name: Purge Old Container Images from ACR

on:
  push:
    branches:
      - main  
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: read
  id-token: write
  pull-requests: write

jobs:
  purge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Login to Azure (Service Principal)
        run: |
          az login --service-principal -u ${{ secrets.AZURE_APP_ID }} -p ${{ secrets.AZURE_PASSWORD }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Get Resource Group Name dynamically
        id: getresourcegroup
        run: |
          resourceGroup=$(az group list --query "[0].name" -o tsv)
          echo "Resource Group: $resourceGroup"
          echo "resourceGroup=$resourceGroup" >> $GITHUB_ENV

      - name: Get ACR name dynamically
        id: getacrname
        run: |
          acrName=$(az acr list --resource-group ${{ env.resourceGroup }} --query "[0].name" -o tsv)
          echo "ACR Name: $acrName"
          echo "acrName=$acrName" >> $GITHUB_ENV

      - name: Login to Azure Container Registry
        run: |
          az acr login --name ${{ env.acrName }}

      - name: Get all repositories in ACR
        id: get_repos
        run: |
          repos=$(az acr repository list --name ${{ env.acrName }} --output tsv)
          echo "Repositories found: $repos"
          # Base64 encode the list of repositories to handle spaces
          repos_base64=$(echo "$repos" | base64)
          echo "repos_base64=$repos_base64" >> $GITHUB_ENV  # Store as base64-encoded value

      - name: Purge old images from all ACR repositories
        run: |
          # Decode the base64-encoded repos string
          repos=$(echo "${{ env.repos_base64 }}" | base64 --decode)
          
          # Loop through the repositories
          for repo in $repos; do
            echo "Purging old images in repository: $repo"
            # Get all tags for the repository
            tags=$(az acr repository show-tags --name ${{ env.acrName }} --repository "$repo" --output tsv)
            for tag in $tags; do
              echo "Purging tag $tag from $repo"
              az acr repository delete --name ${{ env.acrName }} --image "$repo:$tag" --yes
            done
          done
